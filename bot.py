try:
    import telebot, time, threading, requests, os, psycopg2
    from telebot import types

    print('–†–∞–±–æ—Ç–∞–µ—Ç!')
    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ
    con = psycopg2.connect(
      database="dbrqsu9lrjaedd", 
      user="golstwfzgimtjb", 
      password="721335c79988e6b4ee638deaa85dc0e49bff1d8ab7fd77ddd070521362c4d07b", 
      host="ec2-99-80-170-190.eu-west-1.compute.amazonaws.com", 
      port="5432"
    )

    cur = con.cursor() 
    # –û—Å–Ω–æ–≤–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞
    cur.execute('''CREATE TABLE IF NOT EXISTS tab(
        id BIGINT,
        bal BIGINT,
        clava INT,
        nom_id BIGINT,
        nomer BIGINT,
        pozi INT);''')
    con.commit()

    # Qiwi —Ç–∞–±–ª–∏—Ü–∞
    cur.execute('''CREATE TABLE IF NOT EXISTS qiwi(
        popo BIGINT);''')
    con.commit()

    bot = telebot.TeleBot('5209957972:AAHhojlbKE22-Vj8LROsU7xyvjANTR2ODEw') # –¢–æ–∫–µ–Ω –±–æ—Ç–∞

    c1 = types.ReplyKeyboardMarkup(resize_keyboard=True)
    # —Å1_1 = types.KeyboardButton('–†—É—Å—Å–∫–∏–π üá∑üá∫')
    # —Å1_2 = types.KeyboardButton('–ò–Ω–¥–æ–Ω–µ–∑–∏—è üáÆüá©')
    c1_3 = types.KeyboardButton('USA üá±üá∑')
    # —Å1.add(—Å1_1, —Å1_2)
    c1.add(c1_3)
    c1_3 = types.KeyboardButton('–ë–∞–ª–∞–Ω—Å üí∞')
    c1_4 = types.KeyboardButton('–ü–æ–ø–æ–ª–Ω–∏—Ç—å üí≥')
    c1_5 = types.KeyboardButton('–¢–∞—Ä–∏—Ñ')
    c1_6 = types.KeyboardButton('–ü—Ä–∞–≤–∏–ª–∞')
    c1.add(c1_3, c1_4)
    c1.add(c1_5, c1_6)

    c2 = types.ReplyKeyboardMarkup(resize_keyboard=True)
    c2_1 = types.KeyboardButton('–û–ø–ª–∞—Ç–∞ Qiwi ü•ù')
    c2.add(c2_1)
    c2_2 = types.KeyboardButton('–ù–∞–∑–∞–¥ ‚Ü©')
    c2.add(c2_2)

    c3 = types.ReplyKeyboardMarkup(resize_keyboard=True)
    c3_1 = types.KeyboardButton('–ù–∞–∑–∞–¥ ‚Ü©')
    c3.add(c3_1)

    c4 = types.InlineKeyboardMarkup(row_width=1)
    c4_1 = types.InlineKeyboardButton('–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –°–ú–° ‚úâ', callback_data='sms_status')
    c4_2 = types.InlineKeyboardButton('–û—Ç–º–µ–Ω–∞ ‚ùå', callback_data='sms_otmena')
    c4.add(c4_1, c4_2)

    c5 = types.InlineKeyboardMarkup(row_width=1)
    c5_1 = types.InlineKeyboardButton('–ü–æ–ø–æ–ª–Ω–∏—Ç—å.', callback_data='bal_popl')
    c5.add(c5_1)

    def extract_aarg(arg):
        return arg.split()[0]

    def extract_arg(arg):
        return arg.split()[1]

    def payment_history_last(my_login, api_access_token, rows_num, next_TxnId, next_TxnDate):
        # —Å–µ—Å—Å–∏—è –¥–ª—è —Ä–µ–∫—É–µ—Å—Ç
        s = requests.Session()
        # –¥–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∫—É–µ—Å—Ç—É headers
        s.headers['authorization'] = 'Bearer ' + api_access_token
        # –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        parameters = {'rows': rows_num, 'nextTxnId': next_TxnId, 'nextTxnDate': next_TxnDate}
        # —á–µ—Ä–µ–∑ —Ä–µ–∫—É–µ—Å—Ç –ø–æ–ª—É—á–∞–µ–º –ø–ª–∞—Ç–µ–∂—ã —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ - parameters
        h = s.get('https://edge.qiwi.com/payment-history/v2/persons/' + my_login + '/payments', params=parameters)
        # –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ json –≤—Å–µ –æ–±—ä–µ–∫—Ç—ã –≤ –∫–∏–≤–∏ –∞–ø–∏ json
        return h.json()

    mylogin = '79283692011' # –ù–æ–º–µ—Ä qiwi
    api_access_token = 'bdea16d6d7de9b1001fda7d46a6cff7c' # –¢–æ–∫–µ–Ω qiwi

    def QiwiCheck(number, api, sender): # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø–ª–∞—Ç—ã qiwi
        try:
            lastPayments = payment_history_last(number, api, '1', '', '')
            num = lastPayments['data'][0]['account']
            sum = lastPayments['data'][0]['sum']['amount']
            comm = lastPayments['data'][0]['comment']
            type = lastPayments['data'][0]['type']
            txnId = lastPayments['data'][0]['txnId']
            txnId = str(txnId)

            cur.execute("SELECT * FROM qiwi")
            lastpay = cur.fetchall()[0][0]
            lastpay = str(lastpay)

            if lastpay == txnId:
                sms(sender, '–û–ø–ª–∞—Ç—ã –Ω–µ—Ç. ‚õî')
            else:
                try:
                    cur.execute(f"SELECT bal FROM tab WHERE id = '{str(comm[3:])}'")
                    opop = int(cur.fetchall()[0][0]) + int(sum)
                    cur.execute(f"""UPDATE tab SET bal = {opop} WHERE id = {str(comm[3:])}""")
                    con.commit() 
                    cur.execute(f"SELECT ref FROM tab WHERE id = '{str(comm[3:])}'")
                    mkmk = int(cur.fetchall())
                    ttt = int(sum * 0.05)
                    obnova5(mkmk, ttt)
                    cur.execute(f"""UPDATE qiwi SET popo = {txnId} WHERE popo = {lastpay}""")
                    con.commit()
                    obnova2(comm[3:], sum)
                    sms(int(comm[3:]), "–ù–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å –∑–∞—á–∏—Å–ª–µ–Ω–Ω–æ " + str(sum) + " —Ä—É–±.\n\n–£–¥–∞—á–Ω—ã—Ö –∏–≥—Ä!")
                except:
                    sms(sender, '–û–ø–ª–∞—Ç—ã –Ω–µ—Ç. ‚õî')
        except:
            sms(sender, '–û–ø–ª–∞—Ç—ã –Ω–µ—Ç. ‚õî')

    # –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–ø–ª–∞—Ç—ã qiwi
    # Tqiwi = threading.Thread(target=QiwiCheck, args=(mylogin, api_access_token))
    # Tqiwi.start()

    def ras(text, admin): # –†–∞—Å—Å—ã–ª–∫–∞
        # –†a—Å—Å—ã–ª–∫–∞
        cur.execute("SELECT * FROM tab")
        succes = 0
        fail = 0
        for it in cur.fetchall():
            try:
                sms(str(it[0]), str(text))
                succes +=1
            except:
                fail +=1
        sms(admin, "–†–∞—Å—Å—ã–ª–∫—É –ø–æ–ª—É—á–∏–ª–æ - " + str(succes) + " –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∏ –±–æ—Ç–∞ - " + str(fail) + " –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")

    def sms1(messs, smm, clava): # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–º—Å —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
        bot.send_message(messs, smm, reply_markup=clava)

    def sms(messs, smm): # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–º—Å
        bot.send_message(messs, smm)

    def obnova(send, cym, zn): # –ò–∑–º–µ–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
        cur.execute(f"SELECT bal FROM tab WHERE id = '{send}'")
        if zn == 1:
            opop = int(cur.fetchall()[0][0]) + int(cym)
        else:
            opop = int(cur.fetchall()[0][0]) - int(cym)
        # –û–±–Ω–æ–≤–∞
        cur.execute(f"""UPDATE tab SET bal = {opop} WHERE id = {send}""")
        con.commit() 


    def clava(send, zn):
        cur.execute(f"""UPDATE tab SET clava = {zn} WHERE id = {send}""")
        con.commit()

    @bot.message_handler()
    def get_text_messages(message):
        admin = 1455683626 # ID –ê–¥–º–∏–Ω–∞
        id = message.from_user.id # ID –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        mess = message.text.lower() # –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è 

        try:
            cur.execute(f"SELECT * FROM tab WHERE id = '{id}'")
            infa = cur.fetchall()[0]
            i = infa[2]
        except:
            lolo = cur.fetchall()
            if str(lolo) == '[]':
                cur.execute(f"""INSERT INTO tab (id, bal, clava, nom_id, nomer, pozi) VALUES ({id}, 0, 1, 0, 0, 0);""")
                con.commit()
                ban = 1
                i = 15
                n=0
                sms1(id, f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! üòä \n–í–≤–µ–¥–∏—Ç–µ —Ä–µ–≤–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥:', c1)
            else:
                pass

        if mess == "/start":
            bot.send_message(id, f"–ü—Ä–∏–≤–µ—Ç {message.from_user.first_name}! \n–†–∞–¥—ã –≤–∏–¥–µ—Ç—å —Ç–µ–±—è üòä", reply_markup=c1)

        elif mess[0:8] == "—Ä–∞—Å—Å—ã–ª–∫–∞":
            if id == admin:
                m = message.text[9:]
                t = threading.Thread(target=ras, args=(m,))
                t.start()
                sms(id, '–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞.')
            else:
                sms(id, '–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å \n–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º üë§')
        elif mess[0:16] == '–ø—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É' and i == 2:
            clava(sender, 1)
            sms1(sender, '–ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–ø–ª–∞—Ç—É...', c1)
            Tqiwi = threading.Thread(target=QiwiCheck, args=(mylogin, api_access_token, id))
            Tqiwi.start()
        elif mess[0:5] == '—Ç–∞—Ä–∏—Ñ':
            sms(id, '–ù–æ–º–µ—Ä: USA - 3p.')

        elif mess[0:7] == '–ø—Ä–∞–≤–∏–ª–∞':
            sms(id, '1.–ù–æ–º–µ—Ä —É–∂–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω, –Ω–∞ —ç—Ç–æ –Ω–µ—Ç –≥–∞—Ä–∞–Ω—Ç–∏–∏!\n\n2.–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –µ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è.\n\n3.–°–æ–∑–¥–∞–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞ –Ω—É–∂–Ω–æ –¥–µ–ª–∞—Ç—å —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º VPN —Å–µ—Ä–≤–∏—Å–∞ —Ç–æ–π-–∂–µ —Å—Ç—Ä–∞–Ω—ã –Ω–æ–º–µ—Ä –∫–æ—Ç–æ—Ä–æ–π –≤—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –¥–ª—è –µ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è.')

        elif mess[0:6] == "–±–∞–ª–∞–Ω—Å":
            cur.execute(f"SELECT bal FROM tab WHERE id = '{id}'")
            cy = cur.fetchall()
            bal2 = cy[0][0]
            sms1(id, "–¢–≤–æ–π –±–∞–ª–∞–Ω—Å: " + str(bal2) + " —Ä—É–±. üí∞", c5)

        elif mess[0:9] == '–ø–æ–ø–æ–ª–Ω–∏—Ç—å':
            clava(id, 2)
            sms1(id, "–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:", c2)

        elif mess[0:2] == "—Ñ—Ñ":
            if id == admin:
                try:
                    ids = extract_arg(mess)
                    bal = extract_arg2(mess)
                    obnova(ids, bal, 1)
                    sms(id, "–ì–æ—Ç–æ–≤–æ.")
                    sms(str(id), "–ù–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å –∑–∞—á–∏—Å–ª–µ–Ω–æ " + str(bal) + " —Ä—É–±.")
                except:
                    sms(id, "–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –∞–π–¥–∏ –∏–ª–∏ —Å—É–º–º—É.")
            else:
                sms(id, '–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º üë§')

        elif mess[0:9] == '–ø–æ–ø–æ–ª–Ω–∏—Ç—å':
            clava(id, 2)
            sms1(id, "–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:", c2)

        elif mess[0:5] == '–Ω–∞–∑–∞–¥' and i == 2:
            clava(id, 1)
            sms1(id, '–í—ã–±–µ—Ä–∏—Ç–µ:', c1)

        elif mess[0:11] == "–æ–ø–ª–∞—Ç–∞ qiwi" and i == 2:
            clava(id, 2)
            sms1(id, '–ö–æ—à–µ–ª–µ–∫ –¥–ª—è –ø–ª–∞—Ç–µ–∂–∞: +79283692011 \n –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ –∫ –ø–ª–∞—Ç–µ–∂—É: ' + "777" + str(
                id) + f' ‚ùó \n\n–¢–∞–∫ –∂–µ –æ–ø–ª–∞—Ç–∏—Ç—å –º–æ–∂–Ω–æ —Å –ø–æ–º–æ—â—å—é –∫–∞—Ä—Ç—ã (–≤—ã–±–∏—Ä–∞–µ—Ç—Å—è –Ω–∞ —Å–∞–π—Ç–µ). \n\n–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –Ω–∞ –í–∞—à –±–∞–ª–∞–Ω—Å –±—É–¥–µ—Ç –∑–∞—á–∏—Å–ª–µ–Ω–∞ —Å—É–º–º–∞ –ø–µ—Ä–µ–≤–æ–¥–∞. –û–± —ç—Ç–æ–º –≤–∞—Å —É–≤–µ–¥–æ–º—è—Ç.\n\nhttps://qiwi.com/payment/form/99?extra[%27account%27]=79283692011&amountInteger=1&extra[%27comment%27]=777{id}&blocked[0]=comment&blocked[1]=account', c2)


        # elif mess[0:7] == '—Ä—É—Å—Å–∫–∏–π':
        #     b = requests.get('https://sms-acktiwator.ru/api/getnumber/52383f3c6b4cb1e74028b13bca624940cbc15fc8?id=2&code=ID')        post = b.text.split(':')
        #     ids = post[1]
        #     nomer = post[2]

        # elif mess[0:9] == '–∏–Ω–¥–æ–Ω–µ–∑–∏—è':
        #     b = requests.get('https://sms-acktiwator.ru/api/getnumber/52383f3c6b4cb1e74028b13bca624940cbc15fc8?id=2&code=ID')

        elif mess[0:3] == 'usa':
            cur.execute(f"SELECT * FROM tab WHERE id = '{id}'")
            cy = cur.fetchall()[0]
            if int(cy[5]) == 1:
                cur.execute(f"SELECT * FROM tab WHERE id = '{id}'")
                raxd = cur.fetchall()[0]
                idd = raxd[3]
                nomer = raxd[4]
                bot.send_message(id, f'–í—ã —É–∂–µ –≤–∑—è–ª–∏ –æ–¥–∏–Ω –ù–æ–º–µ—Ä: \n\nüì≤ –ù–æ–º–µ—Ä: `+{nomer}`\n‚ô¶ ID: `{idd}`\n‚úâ SMS-Code: –û–∂–∏–¥–∞–Ω–∏–µ..', reply_markup=c4, parse_mode='Markdown')
            else:
                bal2 = cy[1]
                if int(bal2) >= 3:
                    obnova(id, 3, 2)
                    cur.execute(f"""UPDATE tab SET pozi = 1 WHERE id = {id}""")
                    con.commit() 
                    b = requests.get(f'https://sms-code.store/stubs/handler_api.php?api_key=598279d2cd5da2a7d08cf4fd0dc497&action=getNumber&service=vk&country=12', verify=False)
                    post = b.text.split(':')
                    idd = post[1]
                    nomer = post[2]
                    cur.execute(f"""UPDATE tab SET nom_id = {idd} WHERE id = {id}""")
                    con.commit()
                    cur.execute(f"""UPDATE tab SET nomer = {nomer} WHERE id = {id}""")
                    con.commit()
                    bot.send_message(id, f'üì≤ –ù–æ–º–µ—Ä: `+{nomer}`\n‚ô¶ ID: `{idd}`\n‚úâ SMS-Code: –û–∂–∏–¥–∞–Ω–∏–µ..', reply_markup=c4, parse_mode='Markdown')
                else:
                    clava(id, 2)
                    sms1(id, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤. ‚õî', c2)

    @bot.callback_query_handler(func=lambda call:True)
    def callback(call):
        if call.message:
            if call.data == 'sms_status':
                cur.execute(f"SELECT * FROM tab WHERE id = '{call.message.chat.id}'")
                raxd = cur.fetchall()[0]
                idd = raxd[3]
                nomer = raxd[4]
                if int(raxd[5]) == 0:
                    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id, text='‚ùå –ü—Ä–æ–≤–µ—Ä—è—Ç—å –Ω–µ—á–µ–≥–æ.')
                else:
                    b = requests.get(f'https://sms-code.store/stubs/handler_api.php?api_key=598279d2cd5da2a7d08cf4fd0dc497&action=getStatus&id={idd}', verify=False)
                    if str(b.text.split(':')[0]) == 'STATUS_OK':
                        cod = b.text.split(':')[1]
                        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id, text='–û–±–Ω–æ–≤–∞–ª–µ–Ω–∏–µ..')
                        bot.send_message(call.message.chat.id, f'üì≤ –ù–æ–º–µ—Ä: `+{nomer}`\n‚ô¶ ID: `{idd}`\n‚úâ SMS-Code: `{cod}` ‚úÖ', reply_markup=c1, parse_mode='Markdown')
                    else:
                        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id, text='–û–±–Ω–æ–≤–∞–ª–µ–Ω–∏–µ..')
                        bot.send_message(call.message.chat.id, f'üì≤ –ù–æ–º–µ—Ä: `+{nomer}`\n‚ô¶ ID: `{idd}`\n‚úâ SMS-Code: –û–∂–∏–¥–∞–Ω–∏–µ..', reply_markup=c4, parse_mode='Markdown')

            elif call.data == 'sms_otmena':
                cur.execute(f"SELECT * FROM tab WHERE id = '{call.message.chat.id}'")
                raxd = cur.fetchall()[0]
                if int(raxd[5]) == 0:
                    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id, text='‚ùå –û—Ç–º–µ–Ω—è—Ç—å –Ω–µ—á–µ–≥–æ.')
                else:
                    idd = raxd[3]
                    nomer = raxd[4]
                    b = requests.get(f'https://sms-code.store/stubs/handler_api.php?api_key=598279d2cd5da2a7d08cf4fd0dc497&action=getStatus&id={idd}', verify=False)

                    if str(b.text.split(':')[0]) == 'STATUS_OK':
                        cod = b.text.split(':')[1]
                        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id, text='–û–±–Ω–æ–≤–∞–ª–µ–Ω–∏–µ..')
                        bot.send_message(call.message.chat.id, f'üì≤ –ù–æ–º–µ—Ä: +`{nomer}`\n‚ô¶ ID: `{idd}`\n‚úâ SMS-Code: `{cod}` ‚úÖ', reply_markup=c1, parse_mode='Markdown')
                    else:
                        obnova(call.message.chat.id, 3, 1)
                        requests.get(f'https://sms-code.store/stubs/handler_api.php?api_key=598279d2cd5da2a7d08cf4fd0dc497&action=setStatus&status=8&id={idd}', verify=False)
                        cur.execute(f"""UPDATE tab SET pozi = 0 WHERE id = {call.message.chat.id}""")
                        con.commit() 
                        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id, text='‚ùå –û—Ç–º–µ–Ω–∞ –ø–æ–∫—É–ø–∫–∏.')
            elif call.data == 'bal_popl':
                clava(call.message.chat.id, 2)
                cur.execute(f"SELECT bal FROM tab WHERE id = '{call.message.chat.id}'")
                cy = cur.fetchall()
                bal2 = cy[0][0]
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id, text= "–¢–≤–æ–π –±–∞–ª–∞–Ω—Å: " + str(bal2) + " —Ä—É–±. üí∞")
                sms1(call.message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:", c2)

    bot.polling(none_stop=True, interval=0)
except:
  os.system('python bot.py')
