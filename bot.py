try:
	import vk_api, requests, time, threading, psycopg2 
	from vk_api.longpoll import VkLongPoll, VkEventType
	from vk_api.utils import get_random_id
	from vk_api.keyboard import VkKeyboard, VkKeyboardColor


	con = psycopg2.connect(
	  database="d6mk8lfg7oufvn", 
	  user="bnrtdzcoblcxja", 
	  password="f6fcbdc55d5a6a338627ca3971801af46277eb0f81245b08ca6b3051580c9f28", 
	  host="ec2-54-154-101-45.eu-west-1.compute.amazonaws.com", 
	  port="5432"
	)
	cur = con.cursor()
	cur.execute('''CREATE TABLE IF NOT EXISTS tab(
	    id INT,
	    bal INT,
	    clava INT,
	    rozg INT);''')
	con.commit()  

	print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
	keyboard = VkKeyboard(one_time=False)
	# 1
	keyboard.add_button('–†–æ–∑—ã–≥—Ä—ã—à–∏ üéâ', color=VkKeyboardColor.PRIMARY)
	keyboard.add_line()
	keyboard.add_button('–ë–∞–ª–∞–Ω—Å üí∞', color=VkKeyboardColor.PRIMARY)
	keyboard.add_button('–ü–æ–ø–æ–ª–Ω–∏—Ç—å üí≥', color=VkKeyboardColor.PRIMARY)

	clava2 = VkKeyboard(one_time=False)
	clava2.add_button('–û–ø–ª–∞—Ç–∞ Qiwi ü•ù', color=VkKeyboardColor.PRIMARY)
	clava2.add_line()
	clava2.add_button('–ù–∞–∑–∞–¥ ‚Ü©', color=VkKeyboardColor.SECONDARY)

	clava3 = VkKeyboard(one_time=False)
	clava3.add_button('‚Ññ1', color=VkKeyboardColor.SECONDARY)
	clava3.add_button('‚Ññ2', color=VkKeyboardColor.SECONDARY)
	clava3.add_line()
	clava3.add_button('‚Ññ3', color=VkKeyboardColor.SECONDARY)
	clava3.add_button('‚Ññ4', color=VkKeyboardColor.SECONDARY)
	clava3.add_line()
	clava3.add_button('–ù–∞–∑–∞–¥ ‚Ü©', color=VkKeyboardColor.SECONDARY)

	clava4 = VkKeyboard(one_time=False)
	clava4.add_button('–ù–∞–∑–∞–¥ ‚Ü©', color=VkKeyboardColor.SECONDARY)

	def extract_arg(arg):
	    return arg.split()[1]


	def extract_arg2(arg2):
	    return arg2.split()[2]

	def write_message(sender, message):
	    if i == 0:
		authorize.method('messages.send', {'user_id': sender, 'message': message, "random_id": get_random_id(),
							   'keyboard': keyboard.get_keyboard()})
	    if i == 1:
		authorize.method('messages.send', {'user_id': sender, 'message': message, "random_id": get_random_id(),
						   'keyboard': clava2.get_keyboard()})
	    if i == 2:
		authorize.method('messages.send', {'user_id': sender, 'message': message, "attachment": "audio574170405_456239051,audio574170405_456239053,audio574170405_456239054,audio574170405_456239055", "random_id": get_random_id(),
						   'keyboard': clava3.get_keyboard()})
	    if i == 3:
		authorize.method('messages.send', {'user_id': sender, 'message': message,"random_id": get_random_id(),
						   'keyboard': clava4.get_keyboard()})

	def new_polz(send):
	    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏
	    cur.execute(f"SELECT bal FROM tab WHERE id = '{send}'")
	    if str(cur.fetchall()) == '[]':
		cur.execute(f"""INSERT INTO tab (id, bal, clava) VALUES ({send}, 0, 0);""")
		con.commit()
	    else:
		pass
	def ras(text):
	    # –†a—Å—Å—ã–ª–∫–∞
	    cur.execute("SELECT * FROM tab")
	    for it in cur.fetchall():
		succes = 0
		fail = 0
		try:
		    authorize.method('messages.send', {'user_id': str(it[0]), 'message': str(text), "random_id": get_random_id()})
		    succes +=1
		except:
		    fail +=1
	    write_message(admin, "–†–∞—Å—Å—ã–ª–∫—É –ø–æ–ª—É—á–∏–ª–æ - " + str(succes) + " –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
	    write_message(admin, "–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∏ –±–æ—Ç–∞ - " + str(fail) + " –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
	def obnova(send, cym, zn):
	    global bal
	    cur.execute(f"SELECT bal FROM tab WHERE id = '{send}'")
	    if zn == 1:
		opop = int(cur.fetchall()[0][0]) + int(cym)
	    else:
		opop = int(cur.fetchall()[0][0]) - int(cym)
	    # –û–±–Ω–æ–≤–∞
	    cur.execute(f"""UPDATE tab SET bal = {opop} WHERE id = {send}""")
	    con.commit() 
	def clava_n(send, zn):
	    global i
	    cur.execute(f"""UPDATE tab SET clava = {int(zn)} WHERE id = {send}""")
	    con.commit()
	    i = zn

	def pran(send, zn):
	    global roz
	    cur.execute(f"""UPDATE tab SET clava = {int(zn)} WHERE id = {send}""")
	    con.commit()
	    roz = zn
	def clava(send):
	    global i
	    cur.execute(f"SELECT clava FROM tab WHERE id = '{send}'")
	    i = cur.fetchall()[0][0]
	def balans(send):
	    global bal
	    cur.execute(f"SELECT bal FROM tab WHERE id = '{send}'")
	    bal = cur.fetchall()[0][0]
	def prank(send):
	    global roz
	    cur.execute(f"SELECT rozg FROM tab WHERE id = '{send}'")
	    roz = cur.fetchall()[0][0]


	token = "57472ab3e22c6402eae9ab38f55df784f8ec8063c15afff4763089e31dd931591f16455dad565630d36e2"
	authorize = vk_api.VkApi(token=token)
	longpoll = VkLongPoll(authorize)
	admin = 685062634
	for event in longpoll.listen():
	    if event.type == VkEventType.MESSAGE_NEW and event.to_me:
		reseived_message = event.text.lower()
		sender = event.user_id
		new_polz(sender)
		clava(sender)
		if reseived_message == '–Ω–∞—á–∞—Ç—å' \
			or reseived_message == '–Ω–∞—á–∞—Ç—å' \
			or reseived_message == '–ø—Ä–∏–≤–µ—Ç'\
			or reseived_message == '–∫—É'\
			or reseived_message == '—Ö–∞–π' \
			or reseived_message == '–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ' \
			or reseived_message == 'start' \
			or reseived_message == '–¥–∞—Ä–æ–≤–∞':
		    user = authorize.method("users.get", {"user_ids": event.user_id})  # –≤–º–µ—Å—Ç–æ 1 –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ—Ç–µ –∞–π–¥–∏ –Ω—É–∂–Ω–æ–≥–æ —é–∑–µ—Ä–∞
		    name = user[0]['first_name']
		    write_message(sender, "–ü—Ä–∏–≤–µ—Ç, " + name + '! \n–†–∞–¥—ã –≤–∏–¥–µ—Ç—å —Ç–µ–±—è –≤ –Ω–∞—à–µ–π –≥—Ä—É–ø–ø–µ üòä')
		    write_message(sender, '–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é: \n\n- –†–æ–∑—ã–≥—Ä—ã—à–∏ \n- –ë–∞–ª–∞–Ω—Å \n- –ü–æ–ø–æ–ª–Ω–∏—Ç—å')

		elif reseived_message[0:6] == "–±–∞–ª–∞–Ω—Å":
		    balans(sender)
		    write_message(sender, "–¢–≤–æ–π –±–∞–ª–∞–Ω—Å: " + str(bal) + " —Ä—É–±.")
		elif reseived_message == '‚Ññ1' and i == 2:
		    pran(sender, 1)
		    clava_n(sender, 3)
		    write_message(sender, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä: \n–ü—Ä–∏–º–µ—Ä: 79283335577')
		elif reseived_message == '‚Ññ2' and i == 2:
		    pran(sender, 2)
		    clava_n(sender, 3)
		    write_message(sender, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä: \n–ü—Ä–∏–º–µ—Ä: 79283335577')
		elif reseived_message == '‚Ññ3' and i == 2:
		    pran(sender, 3)
		    clava_n(sender, 3)
		    write_message(sender, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä: \n–ü—Ä–∏–º–µ—Ä: 79283335577')
		elif reseived_message == '‚Ññ4' and i == 2:
		    pran(sender, 4)
		    clava_n(sender, 3)
		    write_message(sender, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä: \n–ü—Ä–∏–º–µ—Ä: 79283335577')
		elif reseived_message[0:2] == "79" and len(reseived_message) == 11 and i == 3:
		    balans(sender)
		    prank(sender)
		    if bal >= 5:
			if roz == 1:
			    tem = '–£–≤–µ–ª–∞ –¥—Ä—É–≥–∞'
			if roz == 2:
			    tem = '–ì–æ–±–Ω–∏–∫'
			if roz == 3:
			    tem = '–ß–µ–ª–æ–≤–µ–∫–∞'
			if roz == 4:
			    tem = '–í–æ–∑–º—É—â–µ–Ω–∏–µ'
			obnova(sender, 5, 2)
			write_message(admin, f'–ù–æ–º–µ—Ä: {reseived_message} \n–¢–µ–º–∞: {roz}')
			write_message(sender, f'–ù–æ–º–µ—Ä: {reseived_message} \n–ó–≤–æ–Ω–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω üòá')
		    else:
			write_message(sender, '–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ :(')
		elif reseived_message[0:9] == "–ø–æ–ø–æ–ª–Ω–∏—Ç—å":
		    clava_n(sender, 1)
		    write_message(sender, "–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:")
		elif reseived_message[0:11] == "–æ–ø–ª–∞—Ç–∞ qiwi" and i == 1:
			write_message(sender,
				      'Qiwi-–∫–æ—à–µ–ª—ë–∫: +79283692011 \n–ù–µ –∑–∞–±—É–¥—å—Ç–µ —É–∫–∞–∑–∞—Ç—å —ç—Ç–æ—Ç –∫–æ–¥ –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö –∫ –ø–ª–∞—Ç–µ–∂—É: ' + "1" + str(
					  sender) + ' ‚ùó '
						    '\n\n–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –Ω–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤ —Ç–µ—á–µ–Ω–∏–∏ –º–∏–Ω—É—Ç—ã –±—É–¥–µ—Ç –∑–∞—á–∏—Å–ª–µ–Ω–Ω–∞ —Å—É–º–º–∞ –ø–µ—Ä–µ–≤–æ–¥–∞, –µ—Å–ª–∏ –æ–ø–ª–∞—Ç–∞ –ø—Ä–∏–¥–µ—Ç –≤–∞–º —Å–æ–æ–±—â–∞—Ç')
		elif reseived_message[0:5] == '–Ω–∞–∑–∞–¥' and i == 1 or reseived_message[0:5] == '–Ω–∞–∑–∞–¥' and i == 2:
		    clava_n(sender, 0)
		    write_message(sender, '–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é: \n\n- –†–æ–∑—ã–≥—Ä—ã—à–∏ \n- –ë–∞–ª–∞–Ω—Å \n- –ü–æ–ø–æ–ª–Ω–∏—Ç—å')
		elif reseived_message[0:9] == '—Ä–æ–∑—ã–≥—Ä—ã—à–∏':
		    clava_n(sender, 2)
		    write_message(sender, '–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä —Ä–æ–∑—ã–≥—Ä—ã—à–∞ üéâ \n–¶–µ–Ω–∞: 5 —Ä—É–± - 1 –∑–≤–æ–Ω–æ–∫ ‚òé')
		elif reseived_message[0:5] == '–Ω–∞–∑–∞–¥' and i == 3:
		    clava_n(sender, 2)
		    write_message(sender, "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä —Ä–æ–∑—ã–≥—Ä—ã—à–∞ üéâ")
		elif reseived_message[0:2] == "—Ñ—Ñ":
		    if sender == admin:
			try:
			    id = extract_arg(reseived_message)
			    ball = extract_arg2(reseived_message)
			    obnova(sender, ball, 1)
			    write_message(event.user_id, "–ì–æ—Ç–æ–≤–æ")
			    write_message(str(id), "–ù–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å –∑–∞—á–∏—Å–ª–µ–Ω–æ " + str(ball) + " —Ä—É–±.")
			except:
			    write_message(event.user_id, "–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –∞–π–¥–∏ –∏–ª–∏ —Å—É–º–º—É")
		    else:
			write_message(sender, '–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º !!!')


		elif reseived_message[0:8] == "—Ä–∞—Å—Å—ã–ª–∫–∞":
		    if sender == admin:
			m = extract_arg(event.text)
			t = threading.Thread(target=ras, args=(m,))
			t.start()
			write_message(sender, '–ó–∞–ø—É—â–µ–Ω–æ!')
		    else:
			write_message(sender, '–í—ã –Ω–µ –∞–¥–º–∏–Ω!')
		else:
		    write_message(sender, '–ù–µ –≤–µ—Ä–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ!')
except:
	os.system('python bot.py')
